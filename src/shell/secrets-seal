#!/usr/bin/env bash
set -eo pipefail

# check prerequisites
for cmd in kubeseal grep
do
  command -v ${cmd} > /dev/null || {  echo >&2 "${cmd} must be installed - exiting..."; exit 1; }
done

function errorEcho {
    echo "${1}" 1>&2
    exit 1
}

function errorUsage {
    echo "${1}" 1>&2
    echo ""
    usage
    exit 1
}

function logVerbose {
    if [ ! -z "$VERBOSE" ]; then
        echo "${1}"
    fi
}

if [[ $# -gt 0 ]]; then
  ENVIRONMENT="${1}"
  shift
  # check folder in /cluster
  if [[ ! -d "${PWD}/cluster/${ENVIRONMENT}" ]]; then
    errorEcho "Couldn't find directory \"cluster/${ENVIRONMENT}\"!"
    exit -1
  fi
fi

SCRIPT_DIR="$(cd "$(dirname "$0")" ; pwd -P)"
PWD="$(pwd -P)"
DEFAULT_ENCRYPTION_KEY_PATH="${PWD}/cluster/${ENVIRONMENT}/seal-certificate/sealed-secret.crt"

function usage() {
echo "Encrypts every file with the extension '.unsealed' and stores them besides the unsealed file without the extension."
echo ""
echo "usage: $0 <environment> [options]"
echo ""
echo "        -k    --encryption-key-path:      Path to key file used for encrypting secrets (default: ${DEFAULT_ENCRYPTION_KEY_PATH}) (ENV: ENCRYPTION_KEY_PATH)"
echo "        -ru   --remove--unsealed:         Flag to decide if .unseald files should be removed from the repository or kept untouched."
echo "        -v    --verbose:                  Flag to decide if script is verbose."
echo ""
echo "environment variables:"
echo ""
echo "        ENCRYPTION_KEY_PATH:              Path to key file used for encrypting secrets (default: ${DEFAULT_ENCRYPTION_KEY_PATH})"
}

while [[ $# -gt 0 ]]; do
    key="${1}"

    case $key in
        --encryption-key-path|-k)
        shift
        export ENCRYPTION_KEY_PATH="${1}"
        shift
        ;;
        --remove-unsealed|-ru)
        shift
        export REMOVE_UNSEALED="${1}"
        shift
        ;;
        --verbose|-v)
        shift
        export VERBOSE="true"
        shift
        ;;
        --help|-h|help)
        usage
        exit 0
        ;;
        *)
        shift
    esac
done

# Assign default values if argument is empty
for variable in ENCRYPTION_KEY_PATH; do
  if [[ -z ${!variable} || ${!variable} == '<no value>' ]]; then
    default_var_name="DEFAULT_${variable}"
    export "${variable}=${!default_var_name}"
  fi
done

# Abort if required argument is empty
for variable in ENVIRONMENT; do
  if [[ -z ${!variable} || ${!variable} == '<no value>' ]]; then
    errorUsage "${variable} missing!"
  fi
done

# Check for secret file
if [[ ! -f "${ENCRYPTION_KEY_PATH}" ]]; then
  errorEcho "Secret file ${ENCRYPTION_KEY_PATH} not found!"
fi

# Search for unsealed files in cluster/${ENVIRONMENT}
for FILE in $(find "${PWD}/cluster/${ENVIRONMENT}" -type f -name "*.unsealed"); do
  FILENAME="$(basename ${FILE})"
  UNSEALED_FILEPATH="$(echo ${FILE} | grep -Po '.*(?=\.)')"

  logVerbose "[${FILENAME}]"
  logVerbose "Path: ${FILE}"
  
  kubeseal --cert "${ENCRYPTION_KEY_PATH}" -o yaml < "${FILE}" > "${UNSEALED_FILEPATH}"
  logVerbose "Saved to: ${UNSEALED_FILEPATH}"

  if [ ! -z "${REMOVE_UNSEALED}" ]; then
    logVerbose "Removing unsealed: ${FILE}"
    git rm --cached "${FILE}" --ignore-unmatch
  fi

  logVerbose ""
done

logVerbose "Done: Encrypting unsealed secrets!"
