#!/usr/bin/env bash
set -eo pipefail
source helpers.sh

function usage() {
echo "Encrypts every file with the extension '.unsealed' and stores them besides the unsealed file without the extension."
echo ""
echo "usage: $0 [options]"
echo ""
echo "        -p    --path:                     Path to unsealed files. Optional. Default: cluster/<environment>"
echo "        -k    --encryption-key-path:      Path to key file used for encrypting secrets (default: ${DEFAULT_ENCRYPTION_KEY_PATH}) (ENV: ENCRYPTION_KEY_PATH)"
echo "        -ru   --remove--unsealed:         Flag to decide if .unseald files should be removed from the repository or kept untouched."
echo "        -v    --verbose:                  Flag to decide if script is verbose."
echo ""
echo "environment variables:"
echo ""
echo "        ENCRYPTION_KEY_PATH:              Path to key file used for encrypting secrets (default: ${DEFAULT_ENCRYPTION_KEY_PATH})"
}

while [[ $# -gt 0 ]]; do
    key="${1}"

    case $key in
        --path|-p)
        shift
        export SRCPATH="${1}"
        logVerbose "Setting PATH: ${1}"
        shift
        ;;
        --encryption-key-path|-k)
        shift
        export ENCRYPTION_KEY_PATH="${1}"
        logVerbose "Setting ENCRYPTION_KEY_PATH: ${1}"
        shift
        ;;
        --remove-unsealed|-ru)
        shift
        export REMOVE_UNSEALED="${1}"
        shift
        ;;
        --verbose|-v)
        shift
        export VERBOSE="true"
        shift
        ;;
        --help|-h|help)
        usage
        exit 0
        ;;
        *)
        shift
    esac
done

# Check for secret file
if [[ ! -f "${ENCRYPTION_KEY_PATH}" ]]; then
  errorEcho "Secret file ${ENCRYPTION_KEY_PATH} not found!"
fi

# Search for unsealed files in cluster/${ENVIRONMENT}
for FILE in $(find "${SRCPATH}" -type f -name "*.unsealed"); do
  FILENAME="$(basename ${FILE})"
  UNSEALED_FILEPATH="$(echo ${FILE} | grep -Po '.*(?=\.)')"

  logVerbose "[${FILENAME}]"
  logVerbose "Path: ${FILE}"
  
  kubeseal --cert "${ENCRYPTION_KEY_PATH}" -o yaml < "${FILE}" > "${UNSEALED_FILEPATH}"
  logVerbose "Saved to: ${UNSEALED_FILEPATH}"

  if [ ! -z "${REMOVE_UNSEALED}" ]; then
    logVerbose "Removing unsealed: ${FILE}"
    git rm --cached "${FILE}" --ignore-unmatch
  fi

  logVerbose ""
done

logVerbose "Done: Encrypting unsealed secrets!"
